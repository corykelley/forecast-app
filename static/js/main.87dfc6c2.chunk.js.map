{"version":3,"sources":["components/form.js","components/card.js","components/header.js","components/footer.js","components/layout.js","App.js","index.js"],"names":["Form","getWeather","className","onSubmit","type","name","placeholder","Card","city","country","temp","condition","error","includes","split","map","word","toUpperCase","slice","Header","Footer","href","Layout","children","App","useState","weatherData","setWeatherData","e","a","currentCity","target","value","currentCountry","preventDefault","fetch","apiCall","ok","json","data","sys","Math","round","main","weather","description","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAgBeA,G,MAZF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACd,OACE,0BAAMC,UAAU,OAAOC,SAAUF,GAC/B,yBAAKC,UAAU,UACb,2BAAOE,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAC3C,2BAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,aAEhD,4BAAQF,KAAK,UAAb,kB,eCgCSG,EA9BF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC9C,OACE,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,QACZ,IACAS,GAAaA,EAAUE,SAAS,iBAAmB,kBAAC,IAAD,MACnDF,GAAaA,EAAUE,SAAS,SAAW,kBAAC,IAAD,MAC3CF,GAAaA,EAAUE,SAAS,YAAc,kBAAC,IAAD,MAC9CF,GAAaA,EAAUE,SAAS,SAAW,kBAAC,IAAD,MAC3CF,GAAaA,EAAUE,SAAS,UAAY,kBAAC,IAAD,MAC5CF,GAAaA,EAAUE,SAAS,UAAY,kBAAC,IAAD,OAE9CL,GAAQC,GACP,wBAAIP,UAAU,eACXM,EADH,KACWC,GAGZC,GAAQ,wBAAIR,UAAU,QAAQQ,EAAtB,UACRC,GACC,4BACGA,EACEG,MAAM,KACNC,KAAI,SAACC,GAAD,OAAUA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,GAAK,QAG5DN,GAAS,wBAAIV,UAAU,SAASU,KCzBxBO,G,MATA,WACb,OACE,gCACE,wCACA,yBAAKjB,UAAU,cCONkB,G,MAXA,WACb,OACE,gCACE,gFACqD,IACnD,uBAAGC,KAAK,gCAAR,oBCSOC,G,MAZA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,yBAAKrB,UAAU,kBACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACCqB,GAEH,kBAAC,EAAD,SCiDSC,MAxDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,KAKP1B,EAAU,uCAAG,WAAO2B,GAAP,qBAAAC,EAAA,yDACXC,EAAcF,EAAEG,OAAOvB,KAAKwB,MAC5BC,EAAiBL,EAAEG,OAAOtB,QAAQuB,MACxCJ,EAAEM,kBACEJ,IAAeG,EAJF,iCAKOE,MAAM,qDAAD,OAC4BL,EAD5B,YAC2CG,EAD3C,kBAPf,qCAEG,YAKTG,EALS,QAQHC,GARG,kCASMD,EAAQE,OATd,QASPC,EATO,OAUbZ,EAAe,CACbY,OACA/B,KAAM+B,EAAKlC,KACXI,QAAS8B,EAAKC,IAAI/B,QAClBC,KAAM+B,KAAKC,MAAwB,EAAjBH,EAAKI,KAAKjC,KAAY,EAAI,QAC5CC,UAAW4B,EAAKK,QAAQ,GAAGC,YAC3BjC,MAAO,KAhBI,8BAmBP,IAAIkC,MACR,wEApBW,gCAwBfnB,EAAe,CACbY,KAAM,GACN/B,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,UAAW,GACXC,MAAO,0CA9BM,4CAAH,sDAmChB,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAMX,WAAYA,IAClB,kBAAC,EAAD,CACEO,KAAMkB,EAAYlB,KAClBC,QAASiB,EAAYjB,QACrBC,KAAMgB,EAAYhB,KAClBC,UAAWe,EAAYf,UACvBC,MAAOc,EAAYd,W,MCjD7BmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.87dfc6c2.chunk.js","sourcesContent":["import React from 'react';\n\nimport './styles/form.scss';\n\nconst Form = ({ getWeather }) => {\n  return (\n    <form className=\"form\" onSubmit={getWeather}>\n      <div className=\"inputs\">\n        <input type=\"text\" name=\"city\" placeholder=\"City\" />\n        <input type=\"text\" name=\"country\" placeholder=\"Country\" />\n      </div>\n      <button type=\"submit\">Get Weather</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nimport './styles/card.scss';\n\nimport {\n  WiStormShowers,\n  WiCloudy,\n  WiSprinkle,\n  WiShowers,\n  WiSnow,\n  WiDaySunny,\n} from 'react-icons/wi';\n\nconst Card = ({ city, country, temp, condition, error }) => {\n  return (\n    <div className=\"card-container\">\n      <div className=\"icon\">\n        {' '}\n        {condition && condition.includes('thunderstorm') && <WiStormShowers />}\n        {condition && condition.includes('rain') && <WiShowers />}\n        {condition && condition.includes('drizzle') && <WiSprinkle />}\n        {condition && condition.includes('snow') && <WiSnow />}\n        {condition && condition.includes('cloud') && <WiCloudy />}\n        {condition && condition.includes('clear') && <WiDaySunny />}\n      </div>\n      {city && country && (\n        <h2 className=\"cityCountry\">\n          {city}, {country}\n        </h2>\n      )}\n      {temp && <h3 className=\"temp\">{temp} Â°F</h3>}\n      {condition && (\n        <h3>\n          {condition\n            .split(' ')\n            .map((word) => word[0].toUpperCase() + word.slice(1) + ' ')}\n        </h3>\n      )}\n      {error && <h3 className=\"error\">{error}</h3>}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './styles/header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Forecast</h1>\n      <div className=\"border\"></div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './styles/footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        This site was made with lots of coffee in React by{' '}\n        <a href=\"https://github.com/johncoryk\">Cory Kelley.</a>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './header';\nimport Footer from './footer';\nimport './styles/layout.scss';\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"content\">\n        <Header />\n        {children}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\n\nimport Form from './components/form';\nimport Card from './components/card';\nimport Layout from './components/layout';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState([]);\n\n  const API_KEY = 'cd77e7a0bc0e390080f65cc050a73adf';\n\n  const getWeather = async (e) => {\n    const currentCity = e.target.city.value;\n    const currentCountry = e.target.country.value;\n    e.preventDefault();\n    if (currentCity && currentCountry) {\n      const apiCall = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${currentCity},${currentCountry}&APPID=${API_KEY}`\n      );\n      if (apiCall.ok) {\n        const data = await apiCall.json();\n        setWeatherData({\n          data,\n          city: data.name,\n          country: data.sys.country,\n          temp: Math.round((data.main.temp * 9) / 5 - 459.67),\n          condition: data.weather[0].description,\n          error: '',\n        });\n      } else {\n        throw new Error(\n          'Seems that city/country does not exist, please refresh your browser!'\n        );\n      }\n    } else {\n      setWeatherData({\n        data: '',\n        city: '',\n        country: '',\n        temp: '',\n        condition: '',\n        error: 'Please enter a valid city and country',\n      });\n    }\n  };\n\n  return (\n    <>\n      <Layout>\n        <Form getWeather={getWeather} />\n        <Card\n          city={weatherData.city}\n          country={weatherData.country}\n          temp={weatherData.temp}\n          condition={weatherData.condition}\n          error={weatherData.error}\n        />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}